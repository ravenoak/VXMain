# -*- coding: utf-8 -*-
"""Sample model module."""

from sqlalchemy import *
from sqlalchemy.orm import mapper, relation
from sqlalchemy import Table, ForeignKey, Column
from sqlalchemy.types import Integer, Unicode
#from sqlalchemy.orm import relation, backref

from VXMain.model import DeclarativeBase, metadata, DBSession


class SampleModel(DeclarativeBase):
    __tablename__ = 'sample_model'

    #{ Columns

    id = Column(Integer, primary_key=True)

    data = Column(Unicode(255), nullable=False)

    #}



class OneToManyParent(Base):
    __tablename__ = 'parent'
    id = Column(Integer, primary_key=True)
    children = relationship("Child", backref="parent")

class OneToManyChild(Base):
    __tablename__ = 'child'
    id = Column(Integer, primary_key=True)
    parent_id = Column(Integer, ForeignKey('parent.id'))



class ManyToOneParent(Base):
    __tablename__ = 'parent'
    id = Column(Integer, primary_key=True)
    child_id = Column(Integer, ForeignKey('child.id'))
    child = relationship("Child", backref="parents")

class ManyToOneChild(Base):
    __tablename__ = 'child'
    id = Column(Integer, primary_key=True)



association_table = Table('association', Base.metadata,
    Column('left_id', Integer, ForeignKey('left.id')),
    Column('right_id', Integer, ForeignKey('right.id'))
)

class ManyToManyParent(Base):
    __tablename__ = 'left'
    id = Column(Integer, primary_key=True)
    children = relationship("Child",
                    secondary=association_table,
                    backref="parents")

class ManyToManyChild(Base):
    __tablename__ = 'right'
    id = Column(Integer, primary_key=True)



class Association(Base):
    __tablename__ = 'association'
    left_id = Column(Integer, ForeignKey('left.id'), primary_key=True)
    right_id = Column(Integer, ForeignKey('right.id'), primary_key=True)
    child = relationship("Child", backref="parent_assocs")

class AssociationParent(Base):
    __tablename__ = 'left'
    id = Column(Integer, primary_key=True)
    children = relationship(Association, backref="parent")

class AssociationChild(Base):
    __tablename__ = 'right'
    id = Column(Integer, primary_key=True)